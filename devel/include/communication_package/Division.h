// Generated by gencpp from file communication_package/Division.msg
// DO NOT EDIT!


#ifndef COMMUNICATION_PACKAGE_MESSAGE_DIVISION_H
#define COMMUNICATION_PACKAGE_MESSAGE_DIVISION_H

#include <ros/service_traits.h>


#include <communication_package/DivisionRequest.h>
#include <communication_package/DivisionResponse.h>


namespace communication_package
{

struct Division
{

typedef DivisionRequest Request;
typedef DivisionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Division
} // namespace communication_package


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::communication_package::Division > {
  static const char* value()
  {
    return "40e9c5898eacc0da947d7d8e72bf20eb";
  }

  static const char* value(const ::communication_package::Division&) { return value(); }
};

template<>
struct DataType< ::communication_package::Division > {
  static const char* value()
  {
    return "communication_package/Division";
  }

  static const char* value(const ::communication_package::Division&) { return value(); }
};


// service_traits::MD5Sum< ::communication_package::DivisionRequest> should match
// service_traits::MD5Sum< ::communication_package::Division >
template<>
struct MD5Sum< ::communication_package::DivisionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::communication_package::Division >::value();
  }
  static const char* value(const ::communication_package::DivisionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::communication_package::DivisionRequest> should match
// service_traits::DataType< ::communication_package::Division >
template<>
struct DataType< ::communication_package::DivisionRequest>
{
  static const char* value()
  {
    return DataType< ::communication_package::Division >::value();
  }
  static const char* value(const ::communication_package::DivisionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::communication_package::DivisionResponse> should match
// service_traits::MD5Sum< ::communication_package::Division >
template<>
struct MD5Sum< ::communication_package::DivisionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::communication_package::Division >::value();
  }
  static const char* value(const ::communication_package::DivisionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::communication_package::DivisionResponse> should match
// service_traits::DataType< ::communication_package::Division >
template<>
struct DataType< ::communication_package::DivisionResponse>
{
  static const char* value()
  {
    return DataType< ::communication_package::Division >::value();
  }
  static const char* value(const ::communication_package::DivisionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COMMUNICATION_PACKAGE_MESSAGE_DIVISION_H
